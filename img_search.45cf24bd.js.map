{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,yCCAAC,EAAAD,EAAA,SAKQE,eAAeC,EAAUC,EAAMC,EAAKC,GACxC,IACI,MAAMC,EAAS,IAAIC,gBAAgB,CAC/BC,IANI,qCAOJC,EAAGN,EACHO,WAAY,QACZC,YAAa,aACbC,YAAY,EACZR,KAAMA,EACNS,SAAUR,IAGVS,QAAiBd,EAAAe,QAAMC,IAAI,4BAAgBV,KAGjD,OAFAW,QAAQC,IAAIJ,EAASK,MAEdL,EAASK,I,CAChB,MAAOC,GAEL,MADAH,QAAQG,MAAMA,GACRC,MAAMP,SAASQ,W,ECrBtB,SAASC,EAAcC,GAC1B,MAAOC,EAAMC,SAASC,cAAc,YAE9BC,EAASJ,EACdK,KAAIC,IACH,MAAMC,GACJA,EAAEC,cACFA,EAAaC,aACbA,EAAYC,KACZA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,GACIR,EACJ,MAAO,4CAC0BE,gDACCD,wDACQE,WAAsBC,wGAEvBC,yDACAC,4DACGC,6DACCC,uEAI3C,IAEJC,KAAK,IAEPd,EAAIe,mBAAmB,YAAaZ,E,uBFtBxC,MAAMa,EAAW,IAAIC,eAAe,WAAY,CAC5CC,aAAc,MACdC,aAAc,MAIlBlB,SAASC,cAAc,SAASkB,UAAYC,EAAAC,oBAE3C,MAAMC,EAAO,CACVC,KAAMvB,SAASC,cAAc,WAC7BuB,KAAMxB,SAASC,cAAc,gBAC7BwB,MAAOzB,SAASC,cAAc,UAC9ByB,IAAK1B,SAASC,cAAc,eAC5B0B,SAAU3B,SAASC,cAAc,cACjCF,IAAMC,SAASC,cAAc,YAC7B2B,MAAQ5B,SAASC,cAAc,iBAInCqB,EAAKM,MAAMC,UAAUC,IAAI,aAEzBR,EAAKE,KAAKO,iBAAiB,UAU3B,SAAkBC,GAOd,GANAA,EAAEC,iBACFC,EAAQZ,EAAKG,MAAMU,MAAMC,OACzBd,EAAKI,IAAIW,UAAW,EACpBf,EAAKvB,IAAIoB,UAAY,GAGP,KAAVe,EAEA,YADA9D,EAAAkE,OAAOC,QAAQ,wEAGnB,GAAsB,IAAjBL,EAAMM,OAEP,YADApE,EAAAkE,OAAOC,QAAQ,8DAInBhD,QAAQC,IAAI8B,EAAKG,MAAMU,OACvB3D,EAAU0D,EAtBD,EACG,IAsBXO,MAAOhD,IACJ,MAAMiD,KAACA,EAAIC,UAAEA,EAASC,MAAEA,GAAUnD,EAClCF,QAAQC,IAAI,OAAQkD,EAAM,YAAaC,EAAW,QAAQC,GAExC,IAAdD,GACAvE,EAAAkE,OAAOC,QACH,4EAGR1C,EAAcJ,EAAKiD,MACnB3B,EAAS8B,UACTC,EAAA1E,GAASkE,OAAOS,QAAQ,oBAAoBJ,aAC5CrB,EAAKI,IAAIW,UAAW,EACpBf,EAAKK,SAASE,UAAUC,IAAI,UAAU,G,IAxC9CR,EAAKK,SAASI,iBAAiB,SA4C/B,SAAoBC,GAChBA,EAAEC,gB,IA5CNX,EAAKG,MAAMM,iBAAiB,SA+C5B,WACIT,EAAKI,IAAIW,UAAW,C,IA9CxB,IAAIH,EAAQZ,EAAKG,MAAMU,MAIvBa","sources":["src/js/img_search/img_search.js","src/js/img_search/img_fetch.js","src/js/img_search/img_render.js"],"sourcesContent":["import { Notify } from \"notiflix\";\nimport Notiflix from 'notiflix';\nimport simpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\"\nimport { headerOfClassSearch } from '../mainMarkup'\nimport { fetchCard } from \"./img_fetch\";\nimport { renderGallery } from \"./img_render\";\nimport { onScroll } from \"../scroll\";\nimport '../../css/img_search.css'\nimport '../toIndex'\n\nconst lightbox = new SimpleLightbox('.gallery', {\n    captionsData: 'alt',\n    captionDelay: 250,\n   \n  });\n\ndocument.querySelector('#root').innerHTML = headerOfClassSearch\n\n const refs = {\n    head: document.querySelector('.header'),\n    form: document.querySelector('#search-form'),\n    input: document.querySelector('.field'),\n    sub: document.querySelector('.search-btn'),\n    loadMore: document.querySelector('.load-more'),\n    gal : document.querySelector('.gallery'),\n    toTop : document.querySelector('.back-to-top'),\n}\n\n// refs.loadMore.classList.add('is-hidden')\nrefs.toTop.classList.add('is-hidden')\n\nrefs.form.addEventListener('submit', onSearch)\nrefs.loadMore.addEventListener('click', onLoadMore)\nrefs.input.addEventListener('input', onInputChange)\n\nlet query = refs.input.value\nconst page = 1 \nconst perPage = 40\n\nonscroll()\n\nfunction onSearch(e) {\n    e.preventDefault()\n    query = refs.input.value.trim()\n    refs.sub.disabled = true\n    refs.gal.innerHTML = '';\n\n\n    if (query === '') {\n        Notify.failure('The search string cannot be empty. Please specify your search query.');\n        return;\n    }\n    if ( query.length === 1) {\n        Notify.failure('The  query is too short. Please specify your search query.');\n        return;\n    }\n\n    console.log(refs.input.value);\n    fetchCard(query,page,perPage)\n    .then(( data) => {\n        const {hits, totalHits, total } = data\n        console.log('hits', hits, 'totalHits', totalHits, 'total',total) ;\n\n        if (totalHits === 0) {\n            Notify.failure(\n                'Sorry, there are no images matching your search query. Please try again.',\n        )}\n\n        renderGallery(data.hits);\n        lightbox.refresh();\n        Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n        refs.sub.disabled = true;\n        refs.loadMore.classList.add('visible')\n    })\n}\n\nfunction onLoadMore(e) {\n    e.preventDefault()\n}\n\nfunction onInputChange() {\n    refs.sub.disabled = false\n}\n\n","import axios from \"axios\";\n\nconst API_KEY = '34491623-5c4ef369d6c59f62bc483440c';\nconst BASE_URL = 'https://pixabay.com/api';\n\nexport  async function fetchCard(query,page,perPage) {\n    try {\n        const params = new URLSearchParams({\n            key: API_KEY,  \n            q: query,\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n            page: page,\n            per_page: perPage,\n        });\n\n      const response = await axios.get(`${BASE_URL}/?${params}`);\n      console.log(response.data);\n     \n      return response.data\n    } catch (error) {\n        console.error(error);\n        throw Error(response.statusText)\n      \n    }\n}\n\n","\n\nexport function renderGallery(images) {\n    const  gal = document.querySelector('.gallery')\n \n    const markup = images\n    .map(image => {\n      const {\n        id,\n        largeImageURL,\n        webformatURL, \n        tags, \n        likes, \n        views,\n        comments, \n        downloads \n        } = image;\n        return `\n        <a class=\"gallery__link\" href=\"${largeImageURL}\">\n          <div class=\"gallery-item\" id=\"${id}\">\n            <img class=\"gallery-item__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            <div class=\"info\">\n              <p class=\"info-item\"><b>Likes</b>${likes}</p>\n              <p class=\"info-item\"><b>Views</b>${views}</p>\n              <p class=\"info-item\"><b>Comments</b>${comments}</p>\n              <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n            </div>\n          </div>\n         </a>\n         `;\n     })\n     .join('');\n\n    gal.insertAdjacentHTML('beforeend', markup);\n}"],"names":["$7Y9D8","parcelRequire","$2shzp","async","$12af8941ade6e550$export$e3a01ccdbd5c13a9","query","page","perPage","params","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","response","default","get","console","log","data","error","Error","statusText","$38d818e5ace4cafb$export$30b0ee8bdb5cac31","images","gal","document","querySelector","markup","map","image","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","$02cd4a58b7150322$var$lightbox","SimpleLightbox","captionsData","captionDelay","innerHTML","$31gzB","headerOfClassSearch","$02cd4a58b7150322$var$refs","head","form","input","sub","loadMore","toTop","classList","add","addEventListener","e","preventDefault","$02cd4a58b7150322$var$query","value","trim","disabled","Notify","failure","length","then","hits","totalHits","total","refresh","$parcel$interopDefault","success","onscroll"],"version":3,"file":"img_search.45cf24bd.js.map"}