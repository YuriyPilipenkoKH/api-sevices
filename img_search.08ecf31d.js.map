{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,yCCAAC,EAAAD,EAAA,SAKQE,eAAeC,EAAUC,EAAMC,EAAKC,GACxC,IACI,MAAMC,EAAS,IAAIC,gBAAgB,CAC/BC,IANI,qCAOJC,EAAGN,EACHO,WAAY,QACZC,YAAa,aACbC,YAAY,EACZR,KAAMA,EACNS,SAAUR,IAGVS,QAAiBd,EAAAe,QAAMC,IAAI,4BAAgBV,KAGjD,OAFAW,QAAQC,IAAIJ,EAASK,MAEdL,EAASK,I,CAChB,MAAOC,GAEL,MADAH,QAAQG,MAAMA,GACRC,MAAMP,SAASQ,W,ECrBtB,SAASC,EAAcC,EAAOpB,EAAKC,GACtC,MAAOoB,EAAMC,SAASC,cAAc,YAG9BC,EAASJ,EACdK,KAAI,CAACC,EAAOC,KAEXd,QAAQC,IAAI,OAAOd,EAAM,UAAUC,GACnC,MAAM2B,GACJA,EAAEC,cACFA,EAAaC,aACbA,EAAYC,KACZA,EAAIC,MACJA,EAAKC,MACLA,EAAKC,SACLA,EAAQC,UACRA,GACIT,EACJ,MAAO,4CAC0BG,gDACCD,wDACQE,WAAsBC,qGAE1BJ,EAAK,GAAO3B,EAAK,GAAIC,yDAClBgC,4DACGC,6DACCC,uEAI3C,IAEJC,KAAK,IAEPf,EAAIgB,mBAAmB,YAAab,E,qDFtBxC,MAAMc,EAAW,IAAIC,eAAe,0BAA2B,CAC3DC,aAAc,MACdC,aAAc,MAIlBnB,SAASC,cAAc,SAASmB,UAAYC,EAAAC,oBAG3C,MAAMC,EAAO,CACVC,KAAMxB,SAASC,cAAc,WAC7BwB,KAAMzB,SAASC,cAAc,gBAC7ByB,MAAO1B,SAASC,cAAc,UAC9B0B,IAAK3B,SAASC,cAAc,eAC5B2B,SAAU5B,SAASC,cAAc,cACjCF,IAAMC,SAASC,cAAc,YAC7B4B,MAAQ7B,SAASC,cAAc,iBAGnCsB,EAAKC,KAAKT,mBAAmB,YAAaM,EAAAS,eAC1C,MAAMC,EAAgB/B,SAASC,cAAc,QAC7C8B,EAAaC,iBAAiB,UAI9B,WACIC,EAAUF,EAAaG,K,IAH3B,IAAID,EAAUF,EAAaG,MAO3BX,EAAKE,KAAKO,iBAAiB,UAW3B,SAAkBG,GAOd,GANAA,EAAEC,iBACFC,EAAQd,EAAKG,MAAMQ,MAAMI,OACzBf,EAAKI,IAAIY,UAAW,EACpBhB,EAAKxB,IAAIqB,UAAY,GAGP,KAAViB,EAEA,YADAjE,EAAAoE,OAAOC,QAAQ,wEAGnB,GAAsB,IAAjBJ,EAAMK,OAEP,YADAtE,EAAAoE,OAAOC,QAAQ,8DAKfjE,EAAU6D,EAAMM,EAAKV,GACpBW,MAAOnD,IACJ,MAAMoD,KAACA,EAAIC,UAAEA,EAASC,MAAEA,GAAUtD,EAEhB,IAAdqD,GAOJjD,EAAcJ,EAAKoD,KAAKF,EAAKV,GAC7BjB,EAASgC,UAETC,EAAA7E,GAASoE,OAAOU,QAAQ,oBAAoBJ,aAC5CvB,EAAKI,IAAIY,UAAW,EAEhBO,EAAYb,GACZV,EAAKK,SAASuB,UAAUC,IAAI,YAb5BhF,EAAAoE,OAAOC,QACH,2EAYkC,IAI7CY,OAAM3D,GAASH,QAAQC,IAAIE,KAC3B4D,SAAQ,KACJ/B,EAAKE,KAAK8B,OAAO,G,IAnD9BhC,EAAKK,SAASI,iBAAiB,SA0D/B,SAAoBG,GAChBA,EAAEC,iBACFO,GAAQ,EAGRnE,EAAU6D,EAAMM,EAAKV,GACpBW,MAAOnD,IACJ,MAAMoD,KAACA,EAAIC,UAAEA,EAASC,MAAEA,GAAUtD,EAE5B+D,EAAaC,KAAKC,KAAKZ,EAAYb,GAEzC1C,QAAQC,IAAI,aAAagE,GAGzB3D,EAAcgD,EAAKF,EAAKV,GACxBjB,EAASgC,UACLL,GAAQa,IACRjC,EAAKK,SAASuB,UAAUQ,OAAO,WAC/BvF,EAAAoE,OAAOC,QAAQ,8D,OA3E3BlB,EAAKG,MAAMM,iBAAiB,SAiF5B,WACIT,EAAKI,IAAIY,UAAW,EACpBhB,EAAKK,SAASuB,UAAUQ,OAAO,U,IAlFnCpC,EAAKM,MAAMG,iBAAiB,QAAS4B,EAAAC,SAErC,IAAIxB,EAAQd,EAAKG,MAAMQ,MACnBS,EAAO,GAGX,EAAAiB,EAAAE","sources":["src/js/img_search/img_search.js","src/js/img_search/img_fetch.js","src/js/img_search/img_render.js"],"sourcesContent":["import { Notify } from \"notiflix\";\nimport Notiflix from 'notiflix';\nimport simpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\"\nimport { headerOfClassSearch } from '../mainMarkup'\nimport { fetchCard } from \"./img_fetch\";\nimport { renderGallery } from \"./img_render\";\nimport { onToTop, onScroll } from \"../scroll\";\nimport { perPageSelect } from \"../mainMarkup\";\nimport '../../css/img_search.css'\nimport '../toIndex'\nimport '../../index'\nimport  '../user_api/iconUser'\n\nconst lightbox = new SimpleLightbox('.gallery .gallery__link', {\n    captionsData: 'alt',\n    captionDelay: 250,\n   \n  });\n\ndocument.querySelector('#root').innerHTML = headerOfClassSearch\n\n\n const refs = {\n    head: document.querySelector('.header'),\n    form: document.querySelector('#search-form'),\n    input: document.querySelector('.field'),\n    sub: document.querySelector('.search-btn'),\n    loadMore: document.querySelector('.load-more'),\n    gal : document.querySelector('.gallery'),\n    toTop : document.querySelector('.back-to-top'),\n}\n\nrefs.head.insertAdjacentHTML('beforeend', perPageSelect)\nconst selectedPage =  document.querySelector(\"#sel\")\nselectedPage.addEventListener('change', getSelectValue)\n\nlet perPage = selectedPage.value;\n\nfunction getSelectValue () {\n    perPage = selectedPage.value;\n}\n\n\nrefs.form.addEventListener('submit', onSearch)\nrefs.loadMore.addEventListener('click', onLoadMore)\nrefs.input.addEventListener('input', onInputChange)\nrefs.toTop.addEventListener('click', onToTop)\n\nlet query = refs.input.value\nlet page = 1 \n\n\nonScroll()\n\nfunction onSearch(e) {\n    e.preventDefault()\n    query = refs.input.value.trim()\n    refs.sub.disabled = true\n    refs.gal.innerHTML = '';\n    \n\n    if (query === '') {\n        Notify.failure('The search string cannot be empty. Please specify your search query.');\n        return;\n    } \n    if ( query.length === 1) {\n        Notify.failure('The  query is too short. Please specify your search query.');\n        return;\n    } else {\n\n        \n        fetchCard(query,page,perPage)\n        .then(( data) => {\n            const {hits, totalHits, total } = data\n           \n            if (totalHits === 0) {\n                Notify.failure(\n                    'Sorry, there are no images matching your search query. Please try again.'\n            )\n            return\n        }\n    \n            renderGallery(data.hits,page,perPage);\n            lightbox.refresh();\n    \n            Notiflix.Notify.success(`Hooray! We found ${totalHits} images.`);\n            refs.sub.disabled = true;\n\n            if (totalHits > perPage)  {\n                refs.loadMore.classList.add('visible')\n            }\n          \n        })\n        .catch(error => console.log(error))\n        .finally(() => {\n             refs.form.reset();\n        });\n    }\n}\n\n\n\nfunction onLoadMore(e) {\n    e.preventDefault()\n    page += 1;\n    \n  \n    fetchCard(query,page,perPage)\n    .then(( data) => {\n        const {hits, totalHits, total } = data\n     \n        const totalPages = Math.ceil(totalHits / perPage);\n\n        console.log('totalPages',totalPages);\n        // console.log('page',page, 'perPage',perPage);\n\n        renderGallery(hits,page,perPage);\n        lightbox.refresh();\n        if (page >= totalPages) {\n            refs.loadMore.classList.remove('visible')\n            Notify.failure(\"We're sorry, but you've reached the end of search results.\");\n          }\n\n    })\n}\n\nfunction onInputChange() {\n    refs.sub.disabled = false\n    refs.loadMore.classList.remove('visible')\n\n}\n\n","import axios from \"axios\";\n\nconst API_KEY = '34491623-5c4ef369d6c59f62bc483440c';\nconst BASE_URL = 'https://pixabay.com/api';\n\nexport  async function fetchCard(query,page,perPage) {\n    try {\n        const params = new URLSearchParams({\n            key: API_KEY,  \n            q: query,\n            image_type: 'photo',\n            orientation: 'horizontal',\n            safesearch: true,\n            page: page,\n            per_page: perPage,\n        });\n\n      const response = await axios.get(`${BASE_URL}/?${params}`);\n      console.log(response.data);\n     \n      return response.data\n    } catch (error) {\n        console.error(error);\n        throw Error(response.statusText)\n      \n    }\n}\n\n","\n\nexport function renderGallery(images,page,perPage) {\n    const  gal = document.querySelector('.gallery')//+page*perPage\n   \n \n    const markup = images\n    .map((image, idx) => {\n\n      console.log('page',page, 'perPage',perPage);\n      const {\n        id,\n        largeImageURL,\n        webformatURL, \n        tags, \n        likes, \n        views,\n        comments, \n        downloads \n        } = image;\n        return `\n        <a class=\"gallery__link\" href=\"${largeImageURL}\">\n          <div class=\"gallery-item\" id=\"${id}\">\n            <img class=\"gallery-item__img\" src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n            <div class=\"info\">\n              <p class=\"info-item\"><b>ID</b>${(idx+1) + ((page-1)* perPage)}</p>\n              <p class=\"info-item\"><b>Views</b>${views}</p>\n              <p class=\"info-item\"><b>Comments</b>${comments}</p>\n              <p class=\"info-item\"><b>Downloads</b>${downloads}</p>\n            </div>\n          </div>\n         </a>\n         `;\n     })\n     .join('');\n\n    gal.insertAdjacentHTML('beforeend', markup);\n}"],"names":["$7Y9D8","parcelRequire","$2shzp","async","$12af8941ade6e550$export$e3a01ccdbd5c13a9","query","page","perPage","params","URLSearchParams","key","q","image_type","orientation","safesearch","per_page","response","default","get","console","log","data","error","Error","statusText","$38d818e5ace4cafb$export$30b0ee8bdb5cac31","images","gal","document","querySelector","markup","map","image","idx","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","join","insertAdjacentHTML","$02cd4a58b7150322$var$lightbox","SimpleLightbox","captionsData","captionDelay","innerHTML","$31gzB","headerOfClassSearch","$02cd4a58b7150322$var$refs","head","form","input","sub","loadMore","toTop","perPageSelect","$02cd4a58b7150322$var$selectedPage","addEventListener","$02cd4a58b7150322$var$perPage","value","e","preventDefault","$02cd4a58b7150322$var$query","trim","disabled","Notify","failure","length","$02cd4a58b7150322$var$page","then","hits","totalHits","total","refresh","$parcel$interopDefault","success","classList","add","catch","finally","reset","totalPages","Math","ceil","remove","$2YGUk","onToTop","onScroll"],"version":3,"file":"img_search.08ecf31d.js.map"}